{"mappings":"AEAA,MAAM,EAAQ,CAEV,CAAC,KAAM,IAAI,CACX,CAAC,KAAM,IAAI,CACX,CAAC,KAAM,IAAI,CACX,CAAC,KAAM,IAAI,CACX,CAAC,UAAW,GAAG,CAEf,CAAC,iBAAkB,IAAI,CACvB,CAAC,iBAAkB,IAAI,CACvB,CAAC,UAAW,KAAK,CACjB,CAAC,SAAU,KAAK,CAChB,CAAC,oBAAqB,IAAI,CAC1B,CAAC,KAAM,IAAI,CACX,CAAC,iBAAkB,IAAI,CACvB,CAAC,KAAM,IAAI,CACX,CAAC,KAAM,KAAK,CACZ,CAAC,UAAW,IAAI,CAChB,CAAC,UAAW,IAAI,CAEhB,CAAC,KAAM,GAAG,CACV,CAAC,aAAc,IAAI,CACnB,CAAC,KAAM,IAAI,CACX,CAAC,SAAU,IAAI,CACf,CAAC,SAAU,IAAI,CACf,CAAC,KAAM,IAAI,CACX,CAAC,QAAS,IAAI,CACd,CAAC,KAAM,IAAI,CACX,CAAC,SAAU,IAAI,CAEf,CAAC,uBAAwB,GAAG,CAC5B,CAAC,OAAQ,GAAG,CACf,CACY,EAAkB,AAAC,GAAW,EAAM,MAAM,CAAC,CAAC,EAAK,CAAC,EAAQ,EAAQ,GAAK,EAAI,OAAO,CAAC,EAAQ,GAAU,EAAO,WAAW,ID/B9H,EAA0B,SAAS,cAAc,CAAC,SAClD,EAA2B,SAAS,cAAc,CAAC,UAEzD,SAAS,IAEP,IAAM,EAAU,EAAM,KAAK,CAAC,KAAK,CAAC,MAElC,EAAM,YAAY,CAAC,OAAQ,OAAO,EAAQ,MAAM,GAChD,EAAO,YAAY,CAAC,OAAQ,OAAO,EAAQ,MAAM,GAEjD,EAAO,KAAK,CAAG,EAAQ,GAAG,CAAC,GAAiB,IAAI,CAAC,KACnD,CAEA,EAAM,gBAAgB,CAAC,QAAS,GAChC","sources":["<anon>","src/index.ts","node_modules/cologne-phonetic/build/src/index.js"],"sourcesContent":["const $6e61e9ae0da49751$var$rules = [\n    // substitutions\n    [\n        /ä/g,\n        \"a\"\n    ],\n    [\n        /ö/g,\n        \"o\"\n    ],\n    [\n        /ü/g,\n        \"u\"\n    ],\n    [\n        /ß/g,\n        \"8\"\n    ],\n    [\n        /[^a-z]/g,\n        \"\"\n    ],\n    // complex rules\n    [\n        /[dt](?![csz])/g,\n        \"2\"\n    ],\n    [\n        /[dt](?=[csz])/g,\n        \"8\"\n    ],\n    [\n        /[ckq]x/g,\n        \"88\"\n    ],\n    [\n        /[sz]c/g,\n        \"88\"\n    ],\n    [\n        /^c(?=[ahkloqrux])/,\n        \"4\"\n    ],\n    [\n        /^c/,\n        \"8\"\n    ],\n    [\n        /c(?=[ahkoqux])/,\n        \"4\"\n    ],\n    [\n        /c$/,\n        \"4\"\n    ],\n    [\n        /x/g,\n        \"48\"\n    ],\n    [\n        /p(?!h)/g,\n        \"1\"\n    ],\n    [\n        /p(?=h)/g,\n        \"3\"\n    ],\n    // simple rules\n    [\n        /h/g,\n        \"\"\n    ],\n    [\n        /[aeijouy]/g,\n        \"0\"\n    ],\n    [\n        /b/g,\n        \"1\"\n    ],\n    [\n        /[fvw]/g,\n        \"3\"\n    ],\n    [\n        /[gkq]/g,\n        \"4\"\n    ],\n    [\n        /l/g,\n        \"5\"\n    ],\n    [\n        /[mn]/g,\n        \"6\"\n    ],\n    [\n        /r/g,\n        \"7\"\n    ],\n    [\n        /[csz]/g,\n        \"8\"\n    ],\n    // modifiers\n    [\n        /([^\\w\\s])|(.)(?=\\2)/g,\n        \"\"\n    ],\n    [\n        /\\B0/g,\n        \"\"\n    ] // remove 0s except for first char\n];\nconst $6e61e9ae0da49751$export$c50eaa852b7e5bd7 = (phrase)=>$6e61e9ae0da49751$var$rules.reduce((kph, [search, replace])=>kph.replace(search, replace), phrase.toLowerCase());\n\n\nconst $b4e14b6b8da86996$var$input = document.getElementById(\"input\");\nconst $b4e14b6b8da86996$var$output = document.getElementById(\"output\");\nfunction $b4e14b6b8da86996$var$renderColognePhonetic() {\n    const phrases = $b4e14b6b8da86996$var$input.value.split(\"\\n\");\n    $b4e14b6b8da86996$var$input.setAttribute(\"rows\", String(phrases.length));\n    $b4e14b6b8da86996$var$output.setAttribute(\"rows\", String(phrases.length));\n    $b4e14b6b8da86996$var$output.value = phrases.map((0, $6e61e9ae0da49751$export$c50eaa852b7e5bd7)).join(\"\\n\");\n}\n$b4e14b6b8da86996$var$input.addEventListener(\"input\", $b4e14b6b8da86996$var$renderColognePhonetic);\n$b4e14b6b8da86996$var$renderColognePhonetic();\n\n\n//# sourceMappingURL=index.205cfbda.js.map\n","import { colognePhonetic } from '../node_modules/cologne-phonetic/build/src/index.js';\n\nconst input = <HTMLInputElement>document.getElementById('input');\nconst output = <HTMLInputElement>document.getElementById('output');\n\nfunction renderColognePhonetic() {\n\n  const phrases = input.value.split('\\n');\n\n  input.setAttribute('rows', String(phrases.length));\n  output.setAttribute('rows', String(phrases.length));\n\n  output.value = phrases.map(colognePhonetic).join('\\n');\n}\n\ninput.addEventListener('input', renderColognePhonetic);\nrenderColognePhonetic();","const rules = [\n    // substitutions\n    [/ä/g, 'a'],\n    [/ö/g, 'o'],\n    [/ü/g, 'u'],\n    [/ß/g, '8'],\n    [/[^a-z]/g, ''],\n    // complex rules\n    [/[dt](?![csz])/g, '2'], // [csz] are replaced soon, so this\n    [/[dt](?=[csz])/g, '8'], // needs to exec early\n    [/[ckq]x/g, '88'],\n    [/[sz]c/g, '88'], // double digits will be reduced later -- but this is easier to debug ;)\n    [/^c(?=[ahkloqrux])/, '4'],\n    [/^c/, '8'],\n    [/c(?=[ahkoqux])/, '4'],\n    [/c$/, '4'],\n    [/x/g, '48'],\n    [/p(?!h)/g, '1'],\n    [/p(?=h)/g, '3'],\n    // simple rules\n    [/h/g, ''],\n    [/[aeijouy]/g, '0'],\n    [/b/g, '1'],\n    [/[fvw]/g, '3'],\n    [/[gkq]/g, '4'],\n    [/l/g, '5'],\n    [/[mn]/g, '6'],\n    [/r/g, '7'],\n    [/[csz]/g, '8'],\n    // modifiers\n    [/([^\\w\\s])|(.)(?=\\2)/g, ''], // reduce consecutive duplicates to one\n    [/\\B0/g, ''] // remove 0s except for first char\n];\nexport const colognePhonetic = (phrase) => rules.reduce((kph, [search, replace]) => kph.replace(search, replace), phrase.toLowerCase());\n"],"names":["$6e61e9ae0da49751$var$rules","$6e61e9ae0da49751$export$c50eaa852b7e5bd7","phrase","reduce","kph","search","replace","toLowerCase","$b4e14b6b8da86996$var$input","document","getElementById","$b4e14b6b8da86996$var$output","$b4e14b6b8da86996$var$renderColognePhonetic","phrases","value","split","setAttribute","String","length","map","join","addEventListener"],"version":3,"file":"index.205cfbda.js.map"}