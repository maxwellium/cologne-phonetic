{"version":3,"sources":["../node_modules/cologne-phonetic/build/src/index.js","index.ts"],"names":["rules","colognePhonetic","phrase","reduce","kph","search","replace","toLowerCase","exports"],"mappings":";AAiCwI,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,qBAAA,EAjCxI,MAAMA,EAAQ,CAEV,CAAC,KAAM,KACP,CAAC,KAAM,KACP,CAAC,KAAM,KACP,CAAC,KAAM,KACP,CAAC,UAAW,IAEZ,CAAC,iBAAkB,KACnB,CAAC,iBAAkB,KACnB,CAAC,UAAW,MACZ,CAAC,SAAU,MACX,CAAC,oBAAqB,KACtB,CAAC,KAAM,KACP,CAAC,iBAAkB,KACnB,CAAC,KAAM,KACP,CAAC,KAAM,MACP,CAAC,UAAW,KACZ,CAAC,UAAW,KAEZ,CAAC,KAAM,IACP,CAAC,aAAc,KACf,CAAC,KAAM,KACP,CAAC,SAAU,KACX,CAAC,SAAU,KACX,CAAC,KAAM,KACP,CAAC,QAAS,KACV,CAAC,KAAM,KACP,CAAC,SAAU,KAEX,CAAC,uBAAwB,IACzB,CAAC,OAAQ,KAEAC,EAAmBC,GAAWF,EAAMG,OAAO,CAACC,GAAMC,EAAQC,KAAaF,EAAIE,QAAQD,EAAQC,GAAUJ,EAAOK,eAAeC,QAAAP,gBAAAA;;AC1BjH,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAPvB,IAAA,EAAA,QAAA,uDAEM,EAA2B,SAAS,eAAgB,SACpD,EAA0B,SAAS,eAAgB,UACnD,EAAwB,WAAH,OAAS,EAAO,UAAY,EAAM,MAAM,MAAO,MAAO,IAAK,EAAA,iBAAkB,KAAM,OAE9G,EAAM,iBAAkB,QAAS,GACjC","file":"src.5c3e2aee.js","sourceRoot":"src","sourcesContent":["const rules = [\n    // substitutions\n    [/ä/g, 'a'],\n    [/ö/g, 'o'],\n    [/ü/g, 'u'],\n    [/ß/g, '8'],\n    [/[^a-z]/g, ''],\n    // complex rules\n    [/[dt](?![csz])/g, '2'], // [csz] are replaced soon, so this\n    [/[dt](?=[csz])/g, '8'], // needs to exec early\n    [/[ckq]x/g, '88'],\n    [/[sz]c/g, '88'], // double digits will be reduced later -- but this is easier to debug ;)\n    [/^c(?=[ahkloqrux])/, '4'],\n    [/^c/, '8'],\n    [/c(?=[ahkoqux])/, '4'],\n    [/c$/, '4'],\n    [/x/g, '48'],\n    [/p(?!h)/g, '1'],\n    [/p(?=h)/g, '3'],\n    // simple rules\n    [/h/g, ''],\n    [/[aeijouy]/g, '0'],\n    [/b/g, '1'],\n    [/[fvw]/g, '3'],\n    [/[gkq]/g, '4'],\n    [/l/g, '5'],\n    [/[mn]/g, '6'],\n    [/r/g, '7'],\n    [/[csz]/g, '8'],\n    // modifiers\n    [/([^\\w\\s])|(.)(?=\\2)/g, ''], // reduce consecutive duplicates to one\n    [/\\B0/g, ''] // remove 0s except for first char\n];\nexport const colognePhonetic = (phrase) => rules.reduce((kph, [search, replace]) => kph.replace(search, replace), phrase.toLowerCase());\n","import { colognePhonetic } from '../node_modules/cologne-phonetic/build/src/index.js';\n\nconst input = <HTMLInputElement> document.getElementById( 'input' );\nconst output = <HTMLPreElement> document.getElementById( 'output' );\nconst renderColognePhonetic = () => output.innerText = input.value.split( '\\n' ).map( colognePhonetic ).join( '\\n' );\n\ninput.addEventListener( 'input', renderColognePhonetic );\nrenderColognePhonetic();"]}